/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PatientRouteImport } from './routes/patient'
import { Route as DonorRouteImport } from './routes/donor'
import { Route as CenterRouteImport } from './routes/center'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as AboutRouteImport } from './routes/about'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as PatientIndexRouteImport } from './routes/patient/index'
import { Route as DonorIndexRouteImport } from './routes/donor/index'
import { Route as CenterIndexRouteImport } from './routes/center/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as publicIndexRouteImport } from './routes/(public)/index'
import { Route as StaffLoginRouteImport } from './routes/staff/login'
import { Route as PatientResultsRouteImport } from './routes/patient/results'
import { Route as PatientNotificationsRouteImport } from './routes/patient/notifications'
import { Route as PatientAppointmentsRouteImport } from './routes/patient/appointments'
import { Route as DonorReceiptsRouteImport } from './routes/donor/receipts'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as CenterVerifyCodeRouteImport } from './routes/center/verify-code'
import { Route as CenterUploadResultsRouteImport } from './routes/center/upload-results'
import { Route as CenterStaffRouteImport } from './routes/center/staff'
import { Route as CenterResultsHistoryRouteImport } from './routes/center/results-history'
import { Route as CenterReceiptHistoryRouteImport } from './routes/center/receipt-history'
import { Route as CenterAppointmentsRouteImport } from './routes/center/appointments'
import { Route as AdminWaitlistRouteImport } from './routes/admin/waitlist'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminTransactionsRouteImport } from './routes/admin/transactions'
import { Route as AdminStoreRouteImport } from './routes/admin/store'
import { Route as AdminRolesRouteImport } from './routes/admin/roles'
import { Route as AdminResultsRouteImport } from './routes/admin/results'
import { Route as AdminResetPasswordRouteImport } from './routes/admin/reset-password'
import { Route as AdminReceiptsRouteImport } from './routes/admin/receipts'
import { Route as AdminNotificationsRouteImport } from './routes/admin/notifications'
import { Route as AdminLoginRouteImport } from './routes/admin/login'
import { Route as AdminForgotPasswordRouteImport } from './routes/admin/forgot-password'
import { Route as AdminCentersRouteImport } from './routes/admin/centers'
import { Route as AdminCampaignsRouteImport } from './routes/admin/campaigns'
import { Route as AdminAppointmentsRouteImport } from './routes/admin/appointments'
import { Route as AdminAnalyticsRouteImport } from './routes/admin/analytics'
import { Route as authVerifyEmailRouteImport } from './routes/(auth)/verify-email'
import { Route as authStaffCreatePasswordRouteImport } from './routes/(auth)/staff-create-password'
import { Route as authResetPasswordRouteImport } from './routes/(auth)/reset-password'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as PatientBookIndexRouteImport } from './routes/patient/book/index'
import { Route as DonorCampaignsIndexRouteImport } from './routes/donor/campaigns/index'
import { Route as PatientBookPayRouteImport } from './routes/patient/book/pay'
import { Route as DonorCampaignsCreateRouteImport } from './routes/donor/campaigns/create'
import { Route as DonorCampaignsCampaignIdRouteImport } from './routes/donor/campaigns/$campaignId'
import { Route as authSignUpLayoutRouteRouteImport } from './routes/(auth)/sign-up/_layout/route'
import { Route as authSignUpLayoutIndexRouteImport } from './routes/(auth)/sign-up/_layout/index'
import { Route as authSignUpLayoutPatientRouteImport } from './routes/(auth)/sign-up/_layout/patient'
import { Route as authSignUpLayoutDonorRouteImport } from './routes/(auth)/sign-up/_layout/donor'
import { Route as authSignUpLayoutCenterRouteImport } from './routes/(auth)/sign-up/_layout/center'

const authSignUpRouteImport = createFileRoute('/(auth)/sign-up')()

const PatientRoute = PatientRouteImport.update({
  id: '/patient',
  path: '/patient',
  getParentRoute: () => rootRouteImport,
} as any)
const DonorRoute = DonorRouteImport.update({
  id: '/donor',
  path: '/donor',
  getParentRoute: () => rootRouteImport,
} as any)
const CenterRoute = CenterRouteImport.update({
  id: '/center',
  path: '/center',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authRouteRoute,
} as any)
const PatientIndexRoute = PatientIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PatientRoute,
} as any)
const DonorIndexRoute = DonorIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DonorRoute,
} as any)
const CenterIndexRoute = CenterIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CenterRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const publicIndexRoute = publicIndexRouteImport.update({
  id: '/(public)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StaffLoginRoute = StaffLoginRouteImport.update({
  id: '/staff/login',
  path: '/staff/login',
  getParentRoute: () => rootRouteImport,
} as any)
const PatientResultsRoute = PatientResultsRouteImport.update({
  id: '/results',
  path: '/results',
  getParentRoute: () => PatientRoute,
} as any)
const PatientNotificationsRoute = PatientNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => PatientRoute,
} as any)
const PatientAppointmentsRoute = PatientAppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => PatientRoute,
} as any)
const DonorReceiptsRoute = DonorReceiptsRouteImport.update({
  id: '/receipts',
  path: '/receipts',
  getParentRoute: () => DonorRoute,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const CenterVerifyCodeRoute = CenterVerifyCodeRouteImport.update({
  id: '/verify-code',
  path: '/verify-code',
  getParentRoute: () => CenterRoute,
} as any)
const CenterUploadResultsRoute = CenterUploadResultsRouteImport.update({
  id: '/upload-results',
  path: '/upload-results',
  getParentRoute: () => CenterRoute,
} as any)
const CenterStaffRoute = CenterStaffRouteImport.update({
  id: '/staff',
  path: '/staff',
  getParentRoute: () => CenterRoute,
} as any)
const CenterResultsHistoryRoute = CenterResultsHistoryRouteImport.update({
  id: '/results-history',
  path: '/results-history',
  getParentRoute: () => CenterRoute,
} as any)
const CenterReceiptHistoryRoute = CenterReceiptHistoryRouteImport.update({
  id: '/receipt-history',
  path: '/receipt-history',
  getParentRoute: () => CenterRoute,
} as any)
const CenterAppointmentsRoute = CenterAppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => CenterRoute,
} as any)
const AdminWaitlistRoute = AdminWaitlistRouteImport.update({
  id: '/waitlist',
  path: '/waitlist',
  getParentRoute: () => AdminRoute,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)
const AdminTransactionsRoute = AdminTransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => AdminRoute,
} as any)
const AdminStoreRoute = AdminStoreRouteImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => AdminRoute,
} as any)
const AdminRolesRoute = AdminRolesRouteImport.update({
  id: '/roles',
  path: '/roles',
  getParentRoute: () => AdminRoute,
} as any)
const AdminResultsRoute = AdminResultsRouteImport.update({
  id: '/results',
  path: '/results',
  getParentRoute: () => AdminRoute,
} as any)
const AdminResetPasswordRoute = AdminResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AdminRoute,
} as any)
const AdminReceiptsRoute = AdminReceiptsRouteImport.update({
  id: '/receipts',
  path: '/receipts',
  getParentRoute: () => AdminRoute,
} as any)
const AdminNotificationsRoute = AdminNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => AdminRoute,
} as any)
const AdminLoginRoute = AdminLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AdminRoute,
} as any)
const AdminForgotPasswordRoute = AdminForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AdminRoute,
} as any)
const AdminCentersRoute = AdminCentersRouteImport.update({
  id: '/centers',
  path: '/centers',
  getParentRoute: () => AdminRoute,
} as any)
const AdminCampaignsRoute = AdminCampaignsRouteImport.update({
  id: '/campaigns',
  path: '/campaigns',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAppointmentsRoute = AdminAppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAnalyticsRoute = AdminAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => AdminRoute,
} as any)
const authVerifyEmailRoute = authVerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => authRouteRoute,
} as any)
const authStaffCreatePasswordRoute = authStaffCreatePasswordRouteImport.update({
  id: '/staff-create-password',
  path: '/staff-create-password',
  getParentRoute: () => authRouteRoute,
} as any)
const authResetPasswordRoute = authResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => authRouteRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)
const PatientBookIndexRoute = PatientBookIndexRouteImport.update({
  id: '/book/',
  path: '/book/',
  getParentRoute: () => PatientRoute,
} as any)
const DonorCampaignsIndexRoute = DonorCampaignsIndexRouteImport.update({
  id: '/campaigns/',
  path: '/campaigns/',
  getParentRoute: () => DonorRoute,
} as any)
const PatientBookPayRoute = PatientBookPayRouteImport.update({
  id: '/book/pay',
  path: '/book/pay',
  getParentRoute: () => PatientRoute,
} as any)
const DonorCampaignsCreateRoute = DonorCampaignsCreateRouteImport.update({
  id: '/campaigns/create',
  path: '/campaigns/create',
  getParentRoute: () => DonorRoute,
} as any)
const DonorCampaignsCampaignIdRoute =
  DonorCampaignsCampaignIdRouteImport.update({
    id: '/campaigns/$campaignId',
    path: '/campaigns/$campaignId',
    getParentRoute: () => DonorRoute,
  } as any)
const authSignUpLayoutRouteRoute = authSignUpLayoutRouteRouteImport.update({
  id: '/_layout',
  getParentRoute: () => authSignUpRoute,
} as any)
const authSignUpLayoutIndexRoute = authSignUpLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => authSignUpLayoutRouteRoute,
} as any)
const authSignUpLayoutPatientRoute = authSignUpLayoutPatientRouteImport.update({
  id: '/patient',
  path: '/patient',
  getParentRoute: () => authSignUpLayoutRouteRoute,
} as any)
const authSignUpLayoutDonorRoute = authSignUpLayoutDonorRouteImport.update({
  id: '/donor',
  path: '/donor',
  getParentRoute: () => authSignUpLayoutRouteRoute,
} as any)
const authSignUpLayoutCenterRoute = authSignUpLayoutCenterRouteImport.update({
  id: '/center',
  path: '/center',
  getParentRoute: () => authSignUpLayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof publicIndexRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/center': typeof CenterRouteWithChildren
  '/donor': typeof DonorRouteWithChildren
  '/patient': typeof PatientRouteWithChildren
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/staff-create-password': typeof authStaffCreatePasswordRoute
  '/verify-email': typeof authVerifyEmailRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/appointments': typeof AdminAppointmentsRoute
  '/admin/campaigns': typeof AdminCampaignsRoute
  '/admin/centers': typeof AdminCentersRoute
  '/admin/forgot-password': typeof AdminForgotPasswordRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/receipts': typeof AdminReceiptsRoute
  '/admin/reset-password': typeof AdminResetPasswordRoute
  '/admin/results': typeof AdminResultsRoute
  '/admin/roles': typeof AdminRolesRoute
  '/admin/store': typeof AdminStoreRoute
  '/admin/transactions': typeof AdminTransactionsRoute
  '/admin/users': typeof AdminUsersRoute
  '/admin/waitlist': typeof AdminWaitlistRoute
  '/center/appointments': typeof CenterAppointmentsRoute
  '/center/receipt-history': typeof CenterReceiptHistoryRoute
  '/center/results-history': typeof CenterResultsHistoryRoute
  '/center/staff': typeof CenterStaffRoute
  '/center/upload-results': typeof CenterUploadResultsRoute
  '/center/verify-code': typeof CenterVerifyCodeRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/donor/receipts': typeof DonorReceiptsRoute
  '/patient/appointments': typeof PatientAppointmentsRoute
  '/patient/notifications': typeof PatientNotificationsRoute
  '/patient/results': typeof PatientResultsRoute
  '/staff/login': typeof StaffLoginRoute
  '/admin/': typeof AdminIndexRoute
  '/center/': typeof CenterIndexRoute
  '/donor/': typeof DonorIndexRoute
  '/patient/': typeof PatientIndexRoute
  '/sign-up': typeof authSignUpLayoutRouteRouteWithChildren
  '/donor/campaigns/$campaignId': typeof DonorCampaignsCampaignIdRoute
  '/donor/campaigns/create': typeof DonorCampaignsCreateRoute
  '/patient/book/pay': typeof PatientBookPayRoute
  '/donor/campaigns': typeof DonorCampaignsIndexRoute
  '/patient/book': typeof PatientBookIndexRoute
  '/sign-up/center': typeof authSignUpLayoutCenterRoute
  '/sign-up/donor': typeof authSignUpLayoutDonorRoute
  '/sign-up/patient': typeof authSignUpLayoutPatientRoute
  '/sign-up/': typeof authSignUpLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof publicIndexRoute
  '/about': typeof AboutRoute
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/staff-create-password': typeof authStaffCreatePasswordRoute
  '/verify-email': typeof authVerifyEmailRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/appointments': typeof AdminAppointmentsRoute
  '/admin/campaigns': typeof AdminCampaignsRoute
  '/admin/centers': typeof AdminCentersRoute
  '/admin/forgot-password': typeof AdminForgotPasswordRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/receipts': typeof AdminReceiptsRoute
  '/admin/reset-password': typeof AdminResetPasswordRoute
  '/admin/results': typeof AdminResultsRoute
  '/admin/roles': typeof AdminRolesRoute
  '/admin/store': typeof AdminStoreRoute
  '/admin/transactions': typeof AdminTransactionsRoute
  '/admin/users': typeof AdminUsersRoute
  '/admin/waitlist': typeof AdminWaitlistRoute
  '/center/appointments': typeof CenterAppointmentsRoute
  '/center/receipt-history': typeof CenterReceiptHistoryRoute
  '/center/results-history': typeof CenterResultsHistoryRoute
  '/center/staff': typeof CenterStaffRoute
  '/center/upload-results': typeof CenterUploadResultsRoute
  '/center/verify-code': typeof CenterVerifyCodeRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/donor/receipts': typeof DonorReceiptsRoute
  '/patient/appointments': typeof PatientAppointmentsRoute
  '/patient/notifications': typeof PatientNotificationsRoute
  '/patient/results': typeof PatientResultsRoute
  '/staff/login': typeof StaffLoginRoute
  '/admin': typeof AdminIndexRoute
  '/center': typeof CenterIndexRoute
  '/donor': typeof DonorIndexRoute
  '/patient': typeof PatientIndexRoute
  '/sign-up': typeof authSignUpLayoutIndexRoute
  '/donor/campaigns/$campaignId': typeof DonorCampaignsCampaignIdRoute
  '/donor/campaigns/create': typeof DonorCampaignsCreateRoute
  '/patient/book/pay': typeof PatientBookPayRoute
  '/donor/campaigns': typeof DonorCampaignsIndexRoute
  '/patient/book': typeof PatientBookIndexRoute
  '/sign-up/center': typeof authSignUpLayoutCenterRoute
  '/sign-up/donor': typeof authSignUpLayoutDonorRoute
  '/sign-up/patient': typeof authSignUpLayoutPatientRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)': typeof authRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/center': typeof CenterRouteWithChildren
  '/donor': typeof DonorRouteWithChildren
  '/patient': typeof PatientRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(auth)/staff-create-password': typeof authStaffCreatePasswordRoute
  '/(auth)/verify-email': typeof authVerifyEmailRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/appointments': typeof AdminAppointmentsRoute
  '/admin/campaigns': typeof AdminCampaignsRoute
  '/admin/centers': typeof AdminCentersRoute
  '/admin/forgot-password': typeof AdminForgotPasswordRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/receipts': typeof AdminReceiptsRoute
  '/admin/reset-password': typeof AdminResetPasswordRoute
  '/admin/results': typeof AdminResultsRoute
  '/admin/roles': typeof AdminRolesRoute
  '/admin/store': typeof AdminStoreRoute
  '/admin/transactions': typeof AdminTransactionsRoute
  '/admin/users': typeof AdminUsersRoute
  '/admin/waitlist': typeof AdminWaitlistRoute
  '/center/appointments': typeof CenterAppointmentsRoute
  '/center/receipt-history': typeof CenterReceiptHistoryRoute
  '/center/results-history': typeof CenterResultsHistoryRoute
  '/center/staff': typeof CenterStaffRoute
  '/center/upload-results': typeof CenterUploadResultsRoute
  '/center/verify-code': typeof CenterVerifyCodeRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/donor/receipts': typeof DonorReceiptsRoute
  '/patient/appointments': typeof PatientAppointmentsRoute
  '/patient/notifications': typeof PatientNotificationsRoute
  '/patient/results': typeof PatientResultsRoute
  '/staff/login': typeof StaffLoginRoute
  '/(public)/': typeof publicIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/center/': typeof CenterIndexRoute
  '/donor/': typeof DonorIndexRoute
  '/patient/': typeof PatientIndexRoute
  '/(auth)/sign-up': typeof authSignUpRouteWithChildren
  '/(auth)/sign-up/_layout': typeof authSignUpLayoutRouteRouteWithChildren
  '/donor/campaigns/$campaignId': typeof DonorCampaignsCampaignIdRoute
  '/donor/campaigns/create': typeof DonorCampaignsCreateRoute
  '/patient/book/pay': typeof PatientBookPayRoute
  '/donor/campaigns/': typeof DonorCampaignsIndexRoute
  '/patient/book/': typeof PatientBookIndexRoute
  '/(auth)/sign-up/_layout/center': typeof authSignUpLayoutCenterRoute
  '/(auth)/sign-up/_layout/donor': typeof authSignUpLayoutDonorRoute
  '/(auth)/sign-up/_layout/patient': typeof authSignUpLayoutPatientRoute
  '/(auth)/sign-up/_layout/': typeof authSignUpLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/admin'
    | '/center'
    | '/donor'
    | '/patient'
    | '/login'
    | '/reset-password'
    | '/staff-create-password'
    | '/verify-email'
    | '/admin/analytics'
    | '/admin/appointments'
    | '/admin/campaigns'
    | '/admin/centers'
    | '/admin/forgot-password'
    | '/admin/login'
    | '/admin/notifications'
    | '/admin/receipts'
    | '/admin/reset-password'
    | '/admin/results'
    | '/admin/roles'
    | '/admin/store'
    | '/admin/transactions'
    | '/admin/users'
    | '/admin/waitlist'
    | '/center/appointments'
    | '/center/receipt-history'
    | '/center/results-history'
    | '/center/staff'
    | '/center/upload-results'
    | '/center/verify-code'
    | '/demo/tanstack-query'
    | '/donor/receipts'
    | '/patient/appointments'
    | '/patient/notifications'
    | '/patient/results'
    | '/staff/login'
    | '/admin/'
    | '/center/'
    | '/donor/'
    | '/patient/'
    | '/sign-up'
    | '/donor/campaigns/$campaignId'
    | '/donor/campaigns/create'
    | '/patient/book/pay'
    | '/donor/campaigns'
    | '/patient/book'
    | '/sign-up/center'
    | '/sign-up/donor'
    | '/sign-up/patient'
    | '/sign-up/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/reset-password'
    | '/staff-create-password'
    | '/verify-email'
    | '/admin/analytics'
    | '/admin/appointments'
    | '/admin/campaigns'
    | '/admin/centers'
    | '/admin/forgot-password'
    | '/admin/login'
    | '/admin/notifications'
    | '/admin/receipts'
    | '/admin/reset-password'
    | '/admin/results'
    | '/admin/roles'
    | '/admin/store'
    | '/admin/transactions'
    | '/admin/users'
    | '/admin/waitlist'
    | '/center/appointments'
    | '/center/receipt-history'
    | '/center/results-history'
    | '/center/staff'
    | '/center/upload-results'
    | '/center/verify-code'
    | '/demo/tanstack-query'
    | '/donor/receipts'
    | '/patient/appointments'
    | '/patient/notifications'
    | '/patient/results'
    | '/staff/login'
    | '/admin'
    | '/center'
    | '/donor'
    | '/patient'
    | '/sign-up'
    | '/donor/campaigns/$campaignId'
    | '/donor/campaigns/create'
    | '/patient/book/pay'
    | '/donor/campaigns'
    | '/patient/book'
    | '/sign-up/center'
    | '/sign-up/donor'
    | '/sign-up/patient'
  id:
    | '__root__'
    | '/(auth)'
    | '/about'
    | '/admin'
    | '/center'
    | '/donor'
    | '/patient'
    | '/(auth)/login'
    | '/(auth)/reset-password'
    | '/(auth)/staff-create-password'
    | '/(auth)/verify-email'
    | '/admin/analytics'
    | '/admin/appointments'
    | '/admin/campaigns'
    | '/admin/centers'
    | '/admin/forgot-password'
    | '/admin/login'
    | '/admin/notifications'
    | '/admin/receipts'
    | '/admin/reset-password'
    | '/admin/results'
    | '/admin/roles'
    | '/admin/store'
    | '/admin/transactions'
    | '/admin/users'
    | '/admin/waitlist'
    | '/center/appointments'
    | '/center/receipt-history'
    | '/center/results-history'
    | '/center/staff'
    | '/center/upload-results'
    | '/center/verify-code'
    | '/demo/tanstack-query'
    | '/donor/receipts'
    | '/patient/appointments'
    | '/patient/notifications'
    | '/patient/results'
    | '/staff/login'
    | '/(public)/'
    | '/admin/'
    | '/center/'
    | '/donor/'
    | '/patient/'
    | '/(auth)/sign-up'
    | '/(auth)/sign-up/_layout'
    | '/donor/campaigns/$campaignId'
    | '/donor/campaigns/create'
    | '/patient/book/pay'
    | '/donor/campaigns/'
    | '/patient/book/'
    | '/(auth)/sign-up/_layout/center'
    | '/(auth)/sign-up/_layout/donor'
    | '/(auth)/sign-up/_layout/patient'
    | '/(auth)/sign-up/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  AdminRoute: typeof AdminRouteWithChildren
  CenterRoute: typeof CenterRouteWithChildren
  DonorRoute: typeof DonorRouteWithChildren
  PatientRoute: typeof PatientRouteWithChildren
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  StaffLoginRoute: typeof StaffLoginRoute
  publicIndexRoute: typeof publicIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/patient': {
      id: '/patient'
      path: '/patient'
      fullPath: '/patient'
      preLoaderRoute: typeof PatientRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/donor': {
      id: '/donor'
      path: '/donor'
      fullPath: '/donor'
      preLoaderRoute: typeof DonorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/center': {
      id: '/center'
      path: '/center'
      fullPath: '/center'
      preLoaderRoute: typeof CenterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/patient/': {
      id: '/patient/'
      path: '/'
      fullPath: '/patient/'
      preLoaderRoute: typeof PatientIndexRouteImport
      parentRoute: typeof PatientRoute
    }
    '/donor/': {
      id: '/donor/'
      path: '/'
      fullPath: '/donor/'
      preLoaderRoute: typeof DonorIndexRouteImport
      parentRoute: typeof DonorRoute
    }
    '/center/': {
      id: '/center/'
      path: '/'
      fullPath: '/center/'
      preLoaderRoute: typeof CenterIndexRouteImport
      parentRoute: typeof CenterRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/staff/login': {
      id: '/staff/login'
      path: '/staff/login'
      fullPath: '/staff/login'
      preLoaderRoute: typeof StaffLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/patient/results': {
      id: '/patient/results'
      path: '/results'
      fullPath: '/patient/results'
      preLoaderRoute: typeof PatientResultsRouteImport
      parentRoute: typeof PatientRoute
    }
    '/patient/notifications': {
      id: '/patient/notifications'
      path: '/notifications'
      fullPath: '/patient/notifications'
      preLoaderRoute: typeof PatientNotificationsRouteImport
      parentRoute: typeof PatientRoute
    }
    '/patient/appointments': {
      id: '/patient/appointments'
      path: '/appointments'
      fullPath: '/patient/appointments'
      preLoaderRoute: typeof PatientAppointmentsRouteImport
      parentRoute: typeof PatientRoute
    }
    '/donor/receipts': {
      id: '/donor/receipts'
      path: '/receipts'
      fullPath: '/donor/receipts'
      preLoaderRoute: typeof DonorReceiptsRouteImport
      parentRoute: typeof DonorRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/center/verify-code': {
      id: '/center/verify-code'
      path: '/verify-code'
      fullPath: '/center/verify-code'
      preLoaderRoute: typeof CenterVerifyCodeRouteImport
      parentRoute: typeof CenterRoute
    }
    '/center/upload-results': {
      id: '/center/upload-results'
      path: '/upload-results'
      fullPath: '/center/upload-results'
      preLoaderRoute: typeof CenterUploadResultsRouteImport
      parentRoute: typeof CenterRoute
    }
    '/center/staff': {
      id: '/center/staff'
      path: '/staff'
      fullPath: '/center/staff'
      preLoaderRoute: typeof CenterStaffRouteImport
      parentRoute: typeof CenterRoute
    }
    '/center/results-history': {
      id: '/center/results-history'
      path: '/results-history'
      fullPath: '/center/results-history'
      preLoaderRoute: typeof CenterResultsHistoryRouteImport
      parentRoute: typeof CenterRoute
    }
    '/center/receipt-history': {
      id: '/center/receipt-history'
      path: '/receipt-history'
      fullPath: '/center/receipt-history'
      preLoaderRoute: typeof CenterReceiptHistoryRouteImport
      parentRoute: typeof CenterRoute
    }
    '/center/appointments': {
      id: '/center/appointments'
      path: '/appointments'
      fullPath: '/center/appointments'
      preLoaderRoute: typeof CenterAppointmentsRouteImport
      parentRoute: typeof CenterRoute
    }
    '/admin/waitlist': {
      id: '/admin/waitlist'
      path: '/waitlist'
      fullPath: '/admin/waitlist'
      preLoaderRoute: typeof AdminWaitlistRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/transactions': {
      id: '/admin/transactions'
      path: '/transactions'
      fullPath: '/admin/transactions'
      preLoaderRoute: typeof AdminTransactionsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/store': {
      id: '/admin/store'
      path: '/store'
      fullPath: '/admin/store'
      preLoaderRoute: typeof AdminStoreRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/roles': {
      id: '/admin/roles'
      path: '/roles'
      fullPath: '/admin/roles'
      preLoaderRoute: typeof AdminRolesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/results': {
      id: '/admin/results'
      path: '/results'
      fullPath: '/admin/results'
      preLoaderRoute: typeof AdminResultsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/reset-password': {
      id: '/admin/reset-password'
      path: '/reset-password'
      fullPath: '/admin/reset-password'
      preLoaderRoute: typeof AdminResetPasswordRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/receipts': {
      id: '/admin/receipts'
      path: '/receipts'
      fullPath: '/admin/receipts'
      preLoaderRoute: typeof AdminReceiptsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/notifications': {
      id: '/admin/notifications'
      path: '/notifications'
      fullPath: '/admin/notifications'
      preLoaderRoute: typeof AdminNotificationsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/forgot-password': {
      id: '/admin/forgot-password'
      path: '/forgot-password'
      fullPath: '/admin/forgot-password'
      preLoaderRoute: typeof AdminForgotPasswordRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/centers': {
      id: '/admin/centers'
      path: '/centers'
      fullPath: '/admin/centers'
      preLoaderRoute: typeof AdminCentersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/campaigns': {
      id: '/admin/campaigns'
      path: '/campaigns'
      fullPath: '/admin/campaigns'
      preLoaderRoute: typeof AdminCampaignsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/appointments': {
      id: '/admin/appointments'
      path: '/appointments'
      fullPath: '/admin/appointments'
      preLoaderRoute: typeof AdminAppointmentsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/analytics': {
      id: '/admin/analytics'
      path: '/analytics'
      fullPath: '/admin/analytics'
      preLoaderRoute: typeof AdminAnalyticsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/(auth)/verify-email': {
      id: '/(auth)/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof authVerifyEmailRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/staff-create-password': {
      id: '/(auth)/staff-create-password'
      path: '/staff-create-password'
      fullPath: '/staff-create-password'
      preLoaderRoute: typeof authStaffCreatePasswordRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/patient/book/': {
      id: '/patient/book/'
      path: '/book'
      fullPath: '/patient/book'
      preLoaderRoute: typeof PatientBookIndexRouteImport
      parentRoute: typeof PatientRoute
    }
    '/donor/campaigns/': {
      id: '/donor/campaigns/'
      path: '/campaigns'
      fullPath: '/donor/campaigns'
      preLoaderRoute: typeof DonorCampaignsIndexRouteImport
      parentRoute: typeof DonorRoute
    }
    '/patient/book/pay': {
      id: '/patient/book/pay'
      path: '/book/pay'
      fullPath: '/patient/book/pay'
      preLoaderRoute: typeof PatientBookPayRouteImport
      parentRoute: typeof PatientRoute
    }
    '/donor/campaigns/create': {
      id: '/donor/campaigns/create'
      path: '/campaigns/create'
      fullPath: '/donor/campaigns/create'
      preLoaderRoute: typeof DonorCampaignsCreateRouteImport
      parentRoute: typeof DonorRoute
    }
    '/donor/campaigns/$campaignId': {
      id: '/donor/campaigns/$campaignId'
      path: '/campaigns/$campaignId'
      fullPath: '/donor/campaigns/$campaignId'
      preLoaderRoute: typeof DonorCampaignsCampaignIdRouteImport
      parentRoute: typeof DonorRoute
    }
    '/(auth)/sign-up/_layout': {
      id: '/(auth)/sign-up/_layout'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLayoutRouteRouteImport
      parentRoute: typeof authSignUpRoute
    }
    '/(auth)/sign-up/_layout/': {
      id: '/(auth)/sign-up/_layout/'
      path: '/'
      fullPath: '/sign-up/'
      preLoaderRoute: typeof authSignUpLayoutIndexRouteImport
      parentRoute: typeof authSignUpLayoutRouteRoute
    }
    '/(auth)/sign-up/_layout/patient': {
      id: '/(auth)/sign-up/_layout/patient'
      path: '/patient'
      fullPath: '/sign-up/patient'
      preLoaderRoute: typeof authSignUpLayoutPatientRouteImport
      parentRoute: typeof authSignUpLayoutRouteRoute
    }
    '/(auth)/sign-up/_layout/donor': {
      id: '/(auth)/sign-up/_layout/donor'
      path: '/donor'
      fullPath: '/sign-up/donor'
      preLoaderRoute: typeof authSignUpLayoutDonorRouteImport
      parentRoute: typeof authSignUpLayoutRouteRoute
    }
    '/(auth)/sign-up/_layout/center': {
      id: '/(auth)/sign-up/_layout/center'
      path: '/center'
      fullPath: '/sign-up/center'
      preLoaderRoute: typeof authSignUpLayoutCenterRouteImport
      parentRoute: typeof authSignUpLayoutRouteRoute
    }
  }
}

interface authSignUpLayoutRouteRouteChildren {
  authSignUpLayoutCenterRoute: typeof authSignUpLayoutCenterRoute
  authSignUpLayoutDonorRoute: typeof authSignUpLayoutDonorRoute
  authSignUpLayoutPatientRoute: typeof authSignUpLayoutPatientRoute
  authSignUpLayoutIndexRoute: typeof authSignUpLayoutIndexRoute
}

const authSignUpLayoutRouteRouteChildren: authSignUpLayoutRouteRouteChildren = {
  authSignUpLayoutCenterRoute: authSignUpLayoutCenterRoute,
  authSignUpLayoutDonorRoute: authSignUpLayoutDonorRoute,
  authSignUpLayoutPatientRoute: authSignUpLayoutPatientRoute,
  authSignUpLayoutIndexRoute: authSignUpLayoutIndexRoute,
}

const authSignUpLayoutRouteRouteWithChildren =
  authSignUpLayoutRouteRoute._addFileChildren(
    authSignUpLayoutRouteRouteChildren,
  )

interface authSignUpRouteChildren {
  authSignUpLayoutRouteRoute: typeof authSignUpLayoutRouteRouteWithChildren
}

const authSignUpRouteChildren: authSignUpRouteChildren = {
  authSignUpLayoutRouteRoute: authSignUpLayoutRouteRouteWithChildren,
}

const authSignUpRouteWithChildren = authSignUpRoute._addFileChildren(
  authSignUpRouteChildren,
)

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authStaffCreatePasswordRoute: typeof authStaffCreatePasswordRoute
  authVerifyEmailRoute: typeof authVerifyEmailRoute
  authSignUpRoute: typeof authSignUpRouteWithChildren
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authStaffCreatePasswordRoute: authStaffCreatePasswordRoute,
  authVerifyEmailRoute: authVerifyEmailRoute,
  authSignUpRoute: authSignUpRouteWithChildren,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AdminRouteChildren {
  AdminAnalyticsRoute: typeof AdminAnalyticsRoute
  AdminAppointmentsRoute: typeof AdminAppointmentsRoute
  AdminCampaignsRoute: typeof AdminCampaignsRoute
  AdminCentersRoute: typeof AdminCentersRoute
  AdminForgotPasswordRoute: typeof AdminForgotPasswordRoute
  AdminLoginRoute: typeof AdminLoginRoute
  AdminNotificationsRoute: typeof AdminNotificationsRoute
  AdminReceiptsRoute: typeof AdminReceiptsRoute
  AdminResetPasswordRoute: typeof AdminResetPasswordRoute
  AdminResultsRoute: typeof AdminResultsRoute
  AdminRolesRoute: typeof AdminRolesRoute
  AdminStoreRoute: typeof AdminStoreRoute
  AdminTransactionsRoute: typeof AdminTransactionsRoute
  AdminUsersRoute: typeof AdminUsersRoute
  AdminWaitlistRoute: typeof AdminWaitlistRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAnalyticsRoute: AdminAnalyticsRoute,
  AdminAppointmentsRoute: AdminAppointmentsRoute,
  AdminCampaignsRoute: AdminCampaignsRoute,
  AdminCentersRoute: AdminCentersRoute,
  AdminForgotPasswordRoute: AdminForgotPasswordRoute,
  AdminLoginRoute: AdminLoginRoute,
  AdminNotificationsRoute: AdminNotificationsRoute,
  AdminReceiptsRoute: AdminReceiptsRoute,
  AdminResetPasswordRoute: AdminResetPasswordRoute,
  AdminResultsRoute: AdminResultsRoute,
  AdminRolesRoute: AdminRolesRoute,
  AdminStoreRoute: AdminStoreRoute,
  AdminTransactionsRoute: AdminTransactionsRoute,
  AdminUsersRoute: AdminUsersRoute,
  AdminWaitlistRoute: AdminWaitlistRoute,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface CenterRouteChildren {
  CenterAppointmentsRoute: typeof CenterAppointmentsRoute
  CenterReceiptHistoryRoute: typeof CenterReceiptHistoryRoute
  CenterResultsHistoryRoute: typeof CenterResultsHistoryRoute
  CenterStaffRoute: typeof CenterStaffRoute
  CenterUploadResultsRoute: typeof CenterUploadResultsRoute
  CenterVerifyCodeRoute: typeof CenterVerifyCodeRoute
  CenterIndexRoute: typeof CenterIndexRoute
}

const CenterRouteChildren: CenterRouteChildren = {
  CenterAppointmentsRoute: CenterAppointmentsRoute,
  CenterReceiptHistoryRoute: CenterReceiptHistoryRoute,
  CenterResultsHistoryRoute: CenterResultsHistoryRoute,
  CenterStaffRoute: CenterStaffRoute,
  CenterUploadResultsRoute: CenterUploadResultsRoute,
  CenterVerifyCodeRoute: CenterVerifyCodeRoute,
  CenterIndexRoute: CenterIndexRoute,
}

const CenterRouteWithChildren =
  CenterRoute._addFileChildren(CenterRouteChildren)

interface DonorRouteChildren {
  DonorReceiptsRoute: typeof DonorReceiptsRoute
  DonorIndexRoute: typeof DonorIndexRoute
  DonorCampaignsCampaignIdRoute: typeof DonorCampaignsCampaignIdRoute
  DonorCampaignsCreateRoute: typeof DonorCampaignsCreateRoute
  DonorCampaignsIndexRoute: typeof DonorCampaignsIndexRoute
}

const DonorRouteChildren: DonorRouteChildren = {
  DonorReceiptsRoute: DonorReceiptsRoute,
  DonorIndexRoute: DonorIndexRoute,
  DonorCampaignsCampaignIdRoute: DonorCampaignsCampaignIdRoute,
  DonorCampaignsCreateRoute: DonorCampaignsCreateRoute,
  DonorCampaignsIndexRoute: DonorCampaignsIndexRoute,
}

const DonorRouteWithChildren = DonorRoute._addFileChildren(DonorRouteChildren)

interface PatientRouteChildren {
  PatientAppointmentsRoute: typeof PatientAppointmentsRoute
  PatientNotificationsRoute: typeof PatientNotificationsRoute
  PatientResultsRoute: typeof PatientResultsRoute
  PatientIndexRoute: typeof PatientIndexRoute
  PatientBookPayRoute: typeof PatientBookPayRoute
  PatientBookIndexRoute: typeof PatientBookIndexRoute
}

const PatientRouteChildren: PatientRouteChildren = {
  PatientAppointmentsRoute: PatientAppointmentsRoute,
  PatientNotificationsRoute: PatientNotificationsRoute,
  PatientResultsRoute: PatientResultsRoute,
  PatientIndexRoute: PatientIndexRoute,
  PatientBookPayRoute: PatientBookPayRoute,
  PatientBookIndexRoute: PatientBookIndexRoute,
}

const PatientRouteWithChildren =
  PatientRoute._addFileChildren(PatientRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  AdminRoute: AdminRouteWithChildren,
  CenterRoute: CenterRouteWithChildren,
  DonorRoute: DonorRouteWithChildren,
  PatientRoute: PatientRouteWithChildren,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  StaffLoginRoute: StaffLoginRoute,
  publicIndexRoute: publicIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
